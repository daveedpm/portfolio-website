/**
*                                    CONTENTS
*
* SETTINGS
* Global ...........................Globally-available variables & configurations.
*
* TOOLS
* Mixins............................Useful Mixins.
*
* GENERIC
* Normalize CSS ....................A level playing field.
* Box-Sizing .......................Better default 'box sizing.'
*
* BASE
* Headings..........................H1 to H6 styles
*
* OBJECTS
* Wrappers..........................Wrapping and constraining elements.
*
* COMPONENTS
* Page-head.........................The main page header.
* Page-foot.........................The main page footer.
* Buttons...........................Button elements.
*
* TRUMPS
* Text..............................Text helpers.
*/






/*------------------------------------*\
  #SETTINGS & VARIABLES
\*------------------------------------*/

/* Colors Used
https://color.adobe.com/create/color-wheel is the tool I used to find and reference the colors

#8CB0DB - Base & Background

Complementary A -- #4D6B8F
Complementary B -- #BDDBFF
Complementary D -- #8F733F
Complementary E -- #DBBF8C

Compound A -- #615BA8
Compound B -- #231C75

#00408F - Dark Contrast
*/



:root {
  /* Colors */
  --primary-color:#fff;
  --primary-text-color: #000;
  --secondary-color: #404040;
  --dark-contrast: #000;
  --required-color: red;
  --border-color: #000; 
  --button-background-color: #000;
  --button-border-color: #404040; 
  --button-text-color: #fff;
  --button-cv-color: #fff;

  /* Fonts */
  --primary-font-family: lato;
  --primary-font-weight: 400;
  --primary-font-size: 18px;
  --primary-line-height: 1.6;

}

body {
  background-color:   var(--primary-color);
  font-family:  var(--primary-font-family);
  font-weight:  var(--primary-font-weight);
  font-size:      var(--primary-font-size);
  line-height:  var(--primary-line-height);
  color:              var(--dark-contrast);
}

main {
  padding: 0 3%;
}

a {
  color: var(--primary-text-color);
  transition: 0.4s color;
}

  a.menu-bar {
    text-decoration: none;
  }

  a:visited {
    /* color: var(--secondary-color); */
    /* I don't really like this feature */
  }
  a:hover, a:focus {
    font-weight: bolder; 
    
  }

  a:active {
    color: var(--secondary-color);
  }





/*------------------------------------*\
  #TOOLS
\*------------------------------------*/

/* Reusable css for grids with up to 5 colums or 5 rows. It should help
to easily possition grid__items on a page. Each class corresponds
to a specific 'box' in the grid*/

.col_1-2 {grid-column: 1/2;}
.col_1-3 {grid-column: 1/3;}
.col_1-4 {grid-column: 1/4;}
.col_1-5 {grid-column: 1/5;}
.col_1-6 {grid-column: 1/6;}
.col_2-3 {grid-column: 2/3;}
.col_2-4 {grid-column: 2/4;}
.col_2-5 {grid-column: 2/5;}
.col_2-6 {grid-column: 2/6;}
.col_3-4 {grid-column: 3/4;}
.col_3-5 {grid-column: 3/5;}
.col_3-6 {grid-column: 3/6;}
.col_4-5 {grid-column: 4/5;}
.col_4-6 {grid-column: 4/6;}
.col_5-6 {grid-column: 5/6;}

.row_1-2 {grid-row: 1/2;}
.row_1-3 {grid-row: 1/3;}
.row_1-4 {grid-row: 1/4;}
.row_1-5 {grid-row: 1/5;}
.row_1-6 {grid-row: 1/6;}
.row_2-3 {grid-row: 2/3;}
.row_2-4 {grid-row: 2/4;}
.row_2-5 {grid-row: 2/5;}
.row_2-6 {grid-row: 2/6;}
.row_3-4 {grid-row: 3/4;}
.row_3-5 {grid-row: 3/5;}
.row_3-6 {grid-row: 3/6;}
.row_4-5 {grid-row: 4/5;}
.row_4-6 {grid-row: 4/6;}
.row_5-6 {grid-row: 5/6;}






/*------------------------------------*\
  #GENERIC
\*------------------------------------*/

* {
  box-sizing: border-box;
}






/*------------------------------------*\
  #BASE
\*------------------------------------*/

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}






/*------------------------------------*\
  #OBJECTS
\*------------------------------------*/

/* start grid fallback */
/* .grid__item {
  display: inline-block;
  width: 33%;
} */
/* end grid fallback */

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: minmax(100px, auto);
  grid-gap: 1em;
}

.grid__item {
  text-decoration: none;
}

  /*My hack to put a link/button in the center of a grid
  on the about page. I'm not sure I like it.  */
.center-of-grid {
  align-self: center;
  justify-self: center;
  }
  /* End of hack */

.profile {
  max-width: 700px;
  margin: 0 auto;
  align-items: center;
}

.profile__portrate {
  float: left;
  border-radius: 50%;
  border: 1px solid;
  border-color: var(--border-color);
  width: 50%;
  padding: 0px;
  margin-right: 30px;
 
}

.main-content {
  font-family: 'Times New Roman', Times, serif;
  font-size: 22px;
  margin-right: 400px;
  margin-left: auto;
  text-align: left;
  padding: 10px;
  width: 600px;
}

#contact-info {
  justify-self: right;
  padding: 10px;
}

.contact-form {
  /* float: right; */
  width: 500px;
  margin-top: 10px;
  margin-right: 200px;
  padding-left: 10px;
  /* border-style: solid;
  border-width: 2px; */
  text-align: left;
}

.required-label::after {
  color: var(--required-color);  
  content: " *"
}


.skills-table {
  font-size: 22px;
  width: 550px;
}

  th {
    text-align: left;
    padding: 0px;
  }

  td {
    padding: 0px;
  }

  tr :nth-child(2) {
    text-align: center;
  }

  






/*------------------------------------*\
  #COMPONENTS
\*------------------------------------*/

/* Page-Head */

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style: none;
  padding: 15px;
}

.navigation-list > li {
  display: inline-block;
  margin-left: 15px;
}

/* Page-Foot */

.page-footer {
  position: relative;
  bottom: 0;
  margin: 0 auto;
  text-align: center;   
  display: flex;
  flex-direction: column;
  flex: 1 1 30px;
}

.page-footer > * img {
  width: 30px;
}


/* Buttons */
button  {
  border: none;
  font-family: inherit;
  background-color: var(--button-background-color);
  color: var(--button-text-color);
  text-decoration: none;
  padding: 10px;
  border-radius: 10px;
  border-bottom: 2px solid;
  border-bottom-color: var(--button-border-color);
  transition: 0.4s opacity;
}

button:hover, button:focus {
  cursor: pointer;
  opacity: 0.6;
}

#button-to-see-code {
  margin: 0 auto;
  display: block;
  text-align: center; 
}

.button-cv  {
  border: none;
  font-family: inherit;
  background-color: var(--button-background-color);
  color: var(button-cv-color);
  text-decoration: none;
  padding: 3px 15px 2px 15px;
  border-radius: 15px;
  border-bottom: 2px solid;
  border-bottom-color: var(--button-border-color);
  box-shadow: (0,0,0,0.6);
  transition: 0.4s opacity;
  text-align: center;
  
}

.button-cv:hover {
  color: var(--button-cv-color);
  opacity: 0.6;
}

.button-cv:visited {
  color: var(--button-cv-color);
}





/*------------------------------------*\
  #TRUMPS
\*------------------------------------*/

/* This re-styles the page for small screens */
@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  /* I removed grid__item:last-child because it didn't seem to work
  correctly when I tested the site on small screens. I changed it to simply
  .grid__item which is what you see below.
  */
  /* .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  } */

  .grid__item {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}


/* This is the animation code from the stock image given during the lesson.
I've commented it out as I will attempt to create my own. */
/* @keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}
.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
   @keyframes cloud-move {
     from {
       transform: translate(0, 50px);
     }
     to {
       transform: translate(200px, 50px);
     }
   }
   .cloud-front {
     animation: 30s cloud-move infinite alternate linear;
   }
@keyframes cloud-move-reverse {
     from {
       transform: translate(446px, 48px);
     }
     to {
       transform: translate(100px, 48px);
     }
}
.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
} */



/* 
******************************************************************************************************
*/

#cascais-illustration {
  max-width: 500px;
}

@keyframes cloud-move {
  from {
    transform: translate(-400px, 10px);
  }
  to {
    transform: translate(100px, 10px);
  }
}

.cloud {
  animation-duration: 20s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction:normal;
  animation-timing-function: linear;
}

/* @keyframes boat-scale {
  from {
    transform: scale(1);
    
  }
  to {
  transform: scale(3);
  margin: -300%;
  padding: -300%
  
  
  }
}

.boat {
  animation-duration: 15s;
  animation-name: boat-scale; 
  animation-iteration-count: infinite;
   */
  
 
 
  
  


 
  
  
